.TH "OC" "1" " Openshift CLI User Manuals" "Openshift" "June 2016"  ""


.SH NAME
.PP
oc new\-app \- Create a new application


.SH SYNOPSIS
.PP
\fBoc new\-app\fP [OPTIONS]


.SH DESCRIPTION
.PP
Create a new application by specifying source code, templates, and/or images

.PP
This command will try to build up the components of an application using images, templates, or code that has a public repository. It will lookup the images on the local Docker installation (if available), a Docker registry, an integrated image stream, or stored templates.

.PP
If you specify a source code URL, it will set up a build that takes your source code and converts it into an image that can run inside of a pod. Local source must be in a git repository that has a remote repository that the server can see. The images will be deployed via a deployment configuration, and a service will be connected to the first public port of the app. You may either specify components using the various existing flags or let new\-app autodetect what kind of components you have provided.

.PP
If you provide source code, a new build will be automatically triggered. You can use 'oc status' to check the progress.


.SH OPTIONS
.PP
\fB\-\-allow\-missing\-images\fP=false
    If true, indicates that referenced Docker images that cannot be found locally or in a registry should still be used.

.PP
\fB\-\-allow\-missing\-imagestream\-tags\fP=false
    If true, indicates that image stream tags that don't exist should still be used.

.PP
\fB\-\-allow\-missing\-template\-keys\fP=false
    If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats.

.PP
\fB\-\-as\-test\fP=false
    If true create this application as a test deployment, which validates that the deployment succeeds and then scales down.

.PP
\fB\-\-build\-env\fP=[]
    Specify a key\-value pair for an environment variable to set into each build image.

.PP
\fB\-\-build\-env\-file\fP=[]
    File containing key\-value pairs of environment variables to set into each build image.

.PP
\fB\-\-code\fP=[]
    Source code to use to build this application.

.PP
\fB\-\-context\-dir\fP=""
    Context directory to be used for the build.

.PP
\fB\-\-docker\-image\fP=[]
    Name of a Docker image to include in the app.

.PP
\fB\-\-dry\-run\fP=false
    If true, show the result of the operation without performing it.

.PP
\fB\-e\fP, \fB\-\-env\fP=[]
    Specify a key\-value pair for an environment variable to set into each container.

.PP
\fB\-\-env\-file\fP=[]
    File containing key\-value pairs of environment variables to set into each container.

.PP
\fB\-f\fP, \fB\-\-file\fP=[]
    Path to a template file to use for the app.

.PP
\fB\-\-grant\-install\-rights\fP=false
    If true, a component that requires access to your account may use your token to install software into your project. Only grant images you trust the right to run with your token.

.PP
\fB\-\-group\fP=[]
    Indicate components that should be grouped together as <comp1>+<comp2>.

.PP
\fB\-\-ignore\-unknown\-parameters\fP=false
    If true, will not stop processing if a provided parameter does not exist in the template.

.PP
\fB\-i\fP, \fB\-\-image\-stream\fP=[]
    Name of an image stream to use in the app.

.PP
\fB\-\-insecure\-registry\fP=false
    If true, indicates that the referenced Docker images are on insecure registries and should bypass certificate checking

.PP
\fB\-l\fP, \fB\-\-labels\fP=""
    Label to set in all resources for this application.

.PP
\fB\-L\fP, \fB\-\-list\fP=false
    List all local templates and image streams that can be used to create.

.PP
\fB\-\-name\fP=""
    Set name to use for generated application artifacts

.PP
\fB\-\-no\-install\fP=false
    Do not attempt to run images that describe themselves as being installable

.PP
\fB\-o\fP, \fB\-\-output\fP=""
    Output format. One of: json|yaml|name|template|go\-template|go\-template\-file|templatefile|jsonpath|jsonpath\-file.

.PP
\fB\-\-output\-version\fP=""
    The preferred API versions of the output objects

.PP
\fB\-p\fP, \fB\-\-param\fP=[]
    Specify a key\-value pair (e.g., \-p FOO=BAR) to set/override a parameter value in the template.

.PP
\fB\-\-param\-file\fP=[]
    File containing parameter values to set/override in the template.

.PP
\fB\-S\fP, \fB\-\-search\fP=false
    Search all templates, image streams, and Docker images that match the arguments provided.

.PP
\fB\-a\fP, \fB\-\-show\-all\fP=true
    When printing, show all resources (false means hide terminated pods.)

.PP
\fB\-\-show\-labels\fP=false
    When printing, show all labels as the last column (default hide labels column)

.PP
\fB\-\-sort\-by\fP=""
    If non\-empty, sort list types using this field specification.  The field specification is expressed as a JSONPath expression (e.g. '{.metadata.name}'). The field in the API resource specified by this JSONPath expression must be an integer or a string.

.PP
\fB\-\-source\-secret\fP=""
    The name of an existing secret that should be used for cloning a private git repository.

.PP
\fB\-\-strategy\fP=
    Specify the build strategy to use if you don't want to detect (docker|pipeline|source).

.PP
\fB\-\-template\fP=[]
    Name of a stored template to use in the app.


.SH OPTIONS INHERITED FROM PARENT COMMANDS
.PP
\fB\-\-allow\_verification\_with\_non\_compliant\_keys\fP=false
    Allow a SignatureVerifier to use keys which are technically non\-compliant with RFC6962.

.PP
\fB\-\-alsologtostderr\fP=false
    log to standard error as well as files

.PP
\fB\-\-application\_metrics\_count\_limit\fP=100
    Max number of application metrics to store (per container)

.PP
\fB\-\-as\fP=""
    Username to impersonate for the operation

.PP
\fB\-\-as\-group\fP=[]
    Group to impersonate for the operation, this flag can be repeated to specify multiple groups.

.PP
\fB\-\-azure\-container\-registry\-config\fP=""
    Path to the file containing Azure container registry configuration information.

.PP
\fB\-\-boot\_id\_file\fP="/proc/sys/kernel/random/boot\_id"
    Comma\-separated list of files to check for boot\-id. Use the first one that exists.

.PP
\fB\-\-cache\-dir\fP="/home/openshift/.kube/http\-cache"
    Default HTTP cache directory

.PP
\fB\-\-certificate\-authority\fP=""
    Path to a cert file for the certificate authority

.PP
\fB\-\-client\-certificate\fP=""
    Path to a client certificate file for TLS

.PP
\fB\-\-client\-key\fP=""
    Path to a client key file for TLS

.PP
\fB\-\-cloud\-provider\-gce\-lb\-src\-cidrs\fP=130.211.0.0/22,209.85.152.0/22,209.85.204.0/22,35.191.0.0/16
    CIDRs opened in GCE firewall for LB traffic proxy \& health checks

.PP
\fB\-\-cluster\fP=""
    The name of the kubeconfig cluster to use

.PP
\fB\-\-container\_hints\fP="/etc/cadvisor/container\_hints.json"
    location of the container hints file

.PP
\fB\-\-containerd\fP="unix:///var/run/containerd.sock"
    containerd endpoint

.PP
\fB\-\-context\fP=""
    The name of the kubeconfig context to use

.PP
\fB\-\-default\-not\-ready\-toleration\-seconds\fP=300
    Indicates the tolerationSeconds of the toleration for notReady:NoExecute that is added by default to every pod that does not already have such a toleration.

.PP
\fB\-\-default\-unreachable\-toleration\-seconds\fP=300
    Indicates the tolerationSeconds of the toleration for unreachable:NoExecute that is added by default to every pod that does not already have such a toleration.

.PP
\fB\-\-docker\fP="unix:///var/run/docker.sock"
    docker endpoint

.PP
\fB\-\-docker\-tls\fP=false
    use TLS to connect to docker

.PP
\fB\-\-docker\-tls\-ca\fP="ca.pem"
    path to trusted CA

.PP
\fB\-\-docker\-tls\-cert\fP="cert.pem"
    path to client certificate

.PP
\fB\-\-docker\-tls\-key\fP="key.pem"
    path to private key

.PP
\fB\-\-docker\_env\_metadata\_whitelist\fP=""
    a comma\-separated list of environment variable keys that needs to be collected for docker containers

.PP
\fB\-\-docker\_only\fP=false
    Only report docker containers in addition to root stats

.PP
\fB\-\-docker\_root\fP="/var/lib/docker"
    DEPRECATED: docker root is read from docker info (this is a fallback, default: /var/lib/docker)

.PP
\fB\-\-enable\_load\_reader\fP=false
    Whether to enable cpu load reader

.PP
\fB\-\-event\_storage\_age\_limit\fP="default=24h"
    Max length of time for which to store events (per type). Value is a comma separated list of key values, where the keys are event types (e.g.: creation, oom) or "default" and the value is a duration. Default is applied to all non\-specified event types

.PP
\fB\-\-event\_storage\_event\_limit\fP="default=100000"
    Max number of events to store (per type). Value is a comma separated list of key values, where the keys are event types (e.g.: creation, oom) or "default" and the value is an integer. Default is applied to all non\-specified event types

.PP
\fB\-\-global\_housekeeping\_interval\fP=0
    Interval between global housekeepings

.PP
\fB\-\-housekeeping\_interval\fP=0
    Interval between container housekeepings

.PP
\fB\-\-httptest.serve\fP=""
    if non\-empty, httptest.NewServer serves on this address and blocks

.PP
\fB\-\-insecure\-skip\-tls\-verify\fP=false
    If true, the server's certificate will not be checked for validity. This will make your HTTPS connections insecure

.PP
\fB\-\-kubeconfig\fP=""
    Path to the kubeconfig file to use for CLI requests.

.PP
\fB\-\-log\-flush\-frequency\fP=0
    Maximum number of seconds between log flushes

.PP
\fB\-\-log\_backtrace\_at\fP=:0
    when logging hits line file:N, emit a stack trace

.PP
\fB\-\-log\_cadvisor\_usage\fP=false
    Whether to log the usage of the cAdvisor container

.PP
\fB\-\-log\_dir\fP=""
    If non\-empty, write log files in this directory

.PP
\fB\-\-logtostderr\fP=true
    log to standard error instead of files

.PP
\fB\-\-machine\_id\_file\fP="/etc/machine\-id,/var/lib/dbus/machine\-id"
    Comma\-separated list of files to check for machine\-id. Use the first one that exists.

.PP
\fB\-\-match\-server\-version\fP=false
    Require server version to match client version

.PP
\fB\-n\fP, \fB\-\-namespace\fP=""
    If present, the namespace scope for this CLI request

.PP
\fB\-\-request\-timeout\fP="0"
    The length of time to wait before giving up on a single server request. Non\-zero values should contain a corresponding time unit (e.g. 1s, 2m, 3h). A value of zero means don't timeout requests.

.PP
\fB\-s\fP, \fB\-\-server\fP=""
    The address and port of the Kubernetes API server

.PP
\fB\-\-stderrthreshold\fP=2
    logs at or above this threshold go to stderr

.PP
\fB\-\-storage\_driver\_buffer\_duration\fP=0
    Writes in the storage driver will be buffered for this duration, and committed to the non memory backends as a single transaction

.PP
\fB\-\-storage\_driver\_db\fP="cadvisor"
    database name

.PP
\fB\-\-storage\_driver\_host\fP="localhost:8086"
    database host:port

.PP
\fB\-\-storage\_driver\_password\fP="root"
    database password

.PP
\fB\-\-storage\_driver\_secure\fP=false
    use secure connection with database

.PP
\fB\-\-storage\_driver\_table\fP="stats"
    table name

.PP
\fB\-\-storage\_driver\_user\fP="root"
    database username

.PP
\fB\-\-token\fP=""
    Bearer token for authentication to the API server

.PP
\fB\-\-user\fP=""
    The name of the kubeconfig user to use

.PP
\fB\-v\fP, \fB\-\-v\fP=0
    log level for V logs

.PP
\fB\-\-version\fP=false
    Print version information and quit

.PP
\fB\-\-vmodule\fP=
    comma\-separated list of pattern=N settings for file\-filtered logging


.SH EXAMPLE
.PP
.RS

.nf
  # List all local templates and image streams that can be used to create an app
  oc new\-app \-\-list
  
  # Create an application based on the source code in the current git repository (with a public remote)
  # and a Docker image
  oc new\-app . \-\-docker\-image=repo/langimage
  
  # Create a Ruby application based on the provided [image]\~[source code] combination
  oc new\-app centos/ruby\-25\-centos7\~https://github.com/sclorg/ruby\-ex.git
  
  # Use the public Docker Hub MySQL image to create an app. Generated artifacts will be labeled with db=mysql
  oc new\-app mysql MYSQL\_USER=user MYSQL\_PASSWORD=pass MYSQL\_DATABASE=testdb \-l db=mysql
  
  # Use a MySQL image in a private registry to create an app and override application artifacts' names
  oc new\-app \-\-docker\-image=myregistry.com/mycompany/mysql \-\-name=private
  
  # Create an application from a remote repository using its beta4 branch
  oc new\-app https://github.com/openshift/ruby\-hello\-world#beta4
  
  # Create an application based on a stored template, explicitly setting a parameter value
  oc new\-app \-\-template=ruby\-helloworld\-sample \-\-param=MYSQL\_USER=admin
  
  # Create an application from a remote repository and specify a context directory
  oc new\-app https://github.com/youruser/yourgitrepo \-\-context\-dir=src/build
  
  # Create an application from a remote private repository and specify which existing secret to use
  oc new\-app https://github.com/youruser/yourgitrepo \-\-source\-secret=yoursecret
  
  # Create an application based on a template file, explicitly setting a parameter value
  oc new\-app \-\-file=./example/myapp/template.json \-\-param=MYSQL\_USER=admin
  
  # Search all templates, image streams, and Docker images for the ones that match "ruby"
  oc new\-app \-\-search ruby
  
  # Search for "ruby", but only in stored templates (\-\-template, \-\-image\-stream and \-\-docker\-image
  # can be used to filter search results)
  oc new\-app \-\-search \-\-template=ruby
  
  # Search for "ruby" in stored templates and print the output as an YAML
  oc new\-app \-\-search \-\-template=ruby \-\-output=yaml

.fi
.RE


.SH SEE ALSO
.PP
\fBoc(1)\fP,


.SH HISTORY
.PP
June 2016, Ported from the Kubernetes man\-doc generator
