.TH "OC" "1" " Openshift CLI User Manuals" "Openshift" "June 2016"  ""


.SH NAME
.PP
oc start\-build \- Start a new build


.SH SYNOPSIS
.PP
\fBoc start\-build\fP [OPTIONS]


.SH DESCRIPTION
.PP
Start a build

.PP
This command starts a new build for the provided build config or copies an existing build using \-\-from\-build= <name>. Pass the \-\-follow flag to see output from the build.

.PP
In addition, you can pass a file, directory, or source code repository with the \-\-from\-file, \-\-from\-dir, or \-\-from\-repo flags directly to the build. The contents will be streamed to the build and override the current build source settings. When using \-\-from\-repo, the \-\-commit flag can be used to control which branch, tag, or commit is sent to the server. If you pass \-\-from\-file, the file is placed in the root of an empty directory with the same filename. It is also possible to pass a http or https url to \-\-from\-file and \-\-from\-archive, however authentication is not supported and in case of https the certificate must be valid and recognized by your system.

.PP
Note that builds triggered from binary input will not preserve the source on the server, so rebuilds triggered by base image changes will use the source specified on the build config.


.SH OPTIONS
.PP
\fB\-\-allow\-missing\-template\-keys\fP=true
    If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats.

.PP
\fB\-\-build\-arg\fP=[]
    Specify a key\-value pair to pass to Docker during the build.

.PP
\fB\-\-build\-loglevel\fP=""
    Specify the log level for the build log output

.PP
\fB\-\-commit\fP=""
    Specify the source code commit identifier the build should use; requires a build based on a Git repository

.PP
\fB\-e\fP, \fB\-\-env\fP=[]
    Specify a key\-value pair for an environment variable to set for the build container.

.PP
\fB\-F\fP, \fB\-\-follow\fP=false
    Start a build and watch its logs until it completes or fails

.PP
\fB\-\-from\-archive\fP=""
    An archive (tar, tar.gz, zip) to be extracted before the build and used as the binary input.

.PP
\fB\-\-from\-build\fP=""
    Specify the name of a build which should be re\-run

.PP
\fB\-\-from\-dir\fP=""
    A directory to archive and use as the binary input for a build.

.PP
\fB\-\-from\-file\fP=""
    A file to use as the binary input for the build; example a pom.xml or Dockerfile. Will be the only file in the build source.

.PP
\fB\-\-from\-repo\fP=""
    The path to a local source code repository to use as the binary input for a build.

.PP
\fB\-\-from\-webhook\fP=""
    Specify a generic webhook URL for an existing build config to trigger

.PP
\fB\-\-git\-post\-receive\fP=""
    The contents of the post\-receive hook to trigger a build

.PP
\fB\-\-git\-repository\fP=""
    The path to the git repository for post\-receive; defaults to the current directory

.PP
\fB\-\-incremental\fP=false
    Overrides the incremental setting in a source\-strategy build, ignored if not specified

.PP
\fB\-\-list\-webhooks\fP=""
    List the webhooks for the specified build config or build; accepts 'all', 'generic', or 'github'

.PP
\fB\-\-no\-cache\fP=false
    Overrides the noCache setting in a docker\-strategy build, ignored if not specified

.PP
\fB\-o\fP, \fB\-\-output\fP=""
    Output format. One of: json|yaml|name|go\-template|go\-template\-file|templatefile|template|jsonpath|jsonpath\-file.

.PP
\fB\-\-template\fP=""
    Template string or path to template file to use when \-o=go\-template, \-o=go\-template\-file. The template format is golang templates [
\[la]http://golang.org/pkg/text/template/#pkg-overview\[ra]].

.PP
\fB\-w\fP, \fB\-\-wait\fP=false
    Wait for a build to complete and exit with a non\-zero return code if the build fails


.SH OPTIONS INHERITED FROM PARENT COMMANDS
.PP
\fB\-\-allow\_verification\_with\_non\_compliant\_keys\fP=false
    Allow a SignatureVerifier to use keys which are technically non\-compliant with RFC6962.

.PP
\fB\-\-alsologtostderr\fP=false
    log to standard error as well as files

.PP
\fB\-\-application\_metrics\_count\_limit\fP=100
    Max number of application metrics to store (per container)

.PP
\fB\-\-as\fP=""
    Username to impersonate for the operation

.PP
\fB\-\-as\-group\fP=[]
    Group to impersonate for the operation, this flag can be repeated to specify multiple groups.

.PP
\fB\-\-azure\-container\-registry\-config\fP=""
    Path to the file containing Azure container registry configuration information.

.PP
\fB\-\-boot\_id\_file\fP="/proc/sys/kernel/random/boot\_id"
    Comma\-separated list of files to check for boot\-id. Use the first one that exists.

.PP
\fB\-\-cache\-dir\fP="/home/openshift/.kube/http\-cache"
    Default HTTP cache directory

.PP
\fB\-\-certificate\-authority\fP=""
    Path to a cert file for the certificate authority

.PP
\fB\-\-client\-certificate\fP=""
    Path to a client certificate file for TLS

.PP
\fB\-\-client\-key\fP=""
    Path to a client key file for TLS

.PP
\fB\-\-cloud\-provider\-gce\-lb\-src\-cidrs\fP=130.211.0.0/22,209.85.152.0/22,209.85.204.0/22,35.191.0.0/16
    CIDRs opened in GCE firewall for LB traffic proxy \& health checks

.PP
\fB\-\-cluster\fP=""
    The name of the kubeconfig cluster to use

.PP
\fB\-\-container\_hints\fP="/etc/cadvisor/container\_hints.json"
    location of the container hints file

.PP
\fB\-\-containerd\fP="unix:///var/run/containerd.sock"
    containerd endpoint

.PP
\fB\-\-context\fP=""
    The name of the kubeconfig context to use

.PP
\fB\-\-default\-not\-ready\-toleration\-seconds\fP=300
    Indicates the tolerationSeconds of the toleration for notReady:NoExecute that is added by default to every pod that does not already have such a toleration.

.PP
\fB\-\-default\-unreachable\-toleration\-seconds\fP=300
    Indicates the tolerationSeconds of the toleration for unreachable:NoExecute that is added by default to every pod that does not already have such a toleration.

.PP
\fB\-\-docker\fP="unix:///var/run/docker.sock"
    docker endpoint

.PP
\fB\-\-docker\-tls\fP=false
    use TLS to connect to docker

.PP
\fB\-\-docker\-tls\-ca\fP="ca.pem"
    path to trusted CA

.PP
\fB\-\-docker\-tls\-cert\fP="cert.pem"
    path to client certificate

.PP
\fB\-\-docker\-tls\-key\fP="key.pem"
    path to private key

.PP
\fB\-\-docker\_env\_metadata\_whitelist\fP=""
    a comma\-separated list of environment variable keys that needs to be collected for docker containers

.PP
\fB\-\-docker\_only\fP=false
    Only report docker containers in addition to root stats

.PP
\fB\-\-docker\_root\fP="/var/lib/docker"
    DEPRECATED: docker root is read from docker info (this is a fallback, default: /var/lib/docker)

.PP
\fB\-\-enable\_load\_reader\fP=false
    Whether to enable cpu load reader

.PP
\fB\-\-event\_storage\_age\_limit\fP="default=24h"
    Max length of time for which to store events (per type). Value is a comma separated list of key values, where the keys are event types (e.g.: creation, oom) or "default" and the value is a duration. Default is applied to all non\-specified event types

.PP
\fB\-\-event\_storage\_event\_limit\fP="default=100000"
    Max number of events to store (per type). Value is a comma separated list of key values, where the keys are event types (e.g.: creation, oom) or "default" and the value is an integer. Default is applied to all non\-specified event types

.PP
\fB\-\-global\_housekeeping\_interval\fP=0
    Interval between global housekeepings

.PP
\fB\-\-housekeeping\_interval\fP=0
    Interval between container housekeepings

.PP
\fB\-\-httptest.serve\fP=""
    if non\-empty, httptest.NewServer serves on this address and blocks

.PP
\fB\-\-insecure\-skip\-tls\-verify\fP=false
    If true, the server's certificate will not be checked for validity. This will make your HTTPS connections insecure

.PP
\fB\-\-kubeconfig\fP=""
    Path to the kubeconfig file to use for CLI requests.

.PP
\fB\-\-log\-flush\-frequency\fP=0
    Maximum number of seconds between log flushes

.PP
\fB\-\-log\_backtrace\_at\fP=:0
    when logging hits line file:N, emit a stack trace

.PP
\fB\-\-log\_cadvisor\_usage\fP=false
    Whether to log the usage of the cAdvisor container

.PP
\fB\-\-log\_dir\fP=""
    If non\-empty, write log files in this directory

.PP
\fB\-\-logtostderr\fP=true
    log to standard error instead of files

.PP
\fB\-\-machine\_id\_file\fP="/etc/machine\-id,/var/lib/dbus/machine\-id"
    Comma\-separated list of files to check for machine\-id. Use the first one that exists.

.PP
\fB\-\-match\-server\-version\fP=false
    Require server version to match client version

.PP
\fB\-n\fP, \fB\-\-namespace\fP=""
    If present, the namespace scope for this CLI request

.PP
\fB\-\-request\-timeout\fP="0"
    The length of time to wait before giving up on a single server request. Non\-zero values should contain a corresponding time unit (e.g. 1s, 2m, 3h). A value of zero means don't timeout requests.

.PP
\fB\-s\fP, \fB\-\-server\fP=""
    The address and port of the Kubernetes API server

.PP
\fB\-\-stderrthreshold\fP=2
    logs at or above this threshold go to stderr

.PP
\fB\-\-storage\_driver\_buffer\_duration\fP=0
    Writes in the storage driver will be buffered for this duration, and committed to the non memory backends as a single transaction

.PP
\fB\-\-storage\_driver\_db\fP="cadvisor"
    database name

.PP
\fB\-\-storage\_driver\_host\fP="localhost:8086"
    database host:port

.PP
\fB\-\-storage\_driver\_password\fP="root"
    database password

.PP
\fB\-\-storage\_driver\_secure\fP=false
    use secure connection with database

.PP
\fB\-\-storage\_driver\_table\fP="stats"
    table name

.PP
\fB\-\-storage\_driver\_user\fP="root"
    database username

.PP
\fB\-\-token\fP=""
    Bearer token for authentication to the API server

.PP
\fB\-\-user\fP=""
    The name of the kubeconfig user to use

.PP
\fB\-v\fP, \fB\-\-v\fP=0
    log level for V logs

.PP
\fB\-\-version\fP=false
    Print version information and quit

.PP
\fB\-\-vmodule\fP=
    comma\-separated list of pattern=N settings for file\-filtered logging


.SH EXAMPLE
.PP
.RS

.nf
  # Starts build from build config "hello\-world"
  oc start\-build hello\-world
  
  # Starts build from a previous build "hello\-world\-1"
  oc start\-build \-\-from\-build=hello\-world\-1
  
  # Use the contents of a directory as build input
  oc start\-build hello\-world \-\-from\-dir=src/
  
  # Send the contents of a Git repository to the server from tag 'v2'
  oc start\-build hello\-world \-\-from\-repo=../hello\-world \-\-commit=v2
  
  # Start a new build for build config "hello\-world" and watch the logs until the build
  # completes or fails.
  oc start\-build hello\-world \-\-follow
  
  # Start a new build for build config "hello\-world" and wait until the build completes. It
  # exits with a non\-zero return code if the build fails.
  oc start\-build hello\-world \-\-wait

.fi
.RE


.SH SEE ALSO
.PP
\fBoc(1)\fP,


.SH HISTORY
.PP
June 2016, Ported from the Kubernetes man\-doc generator
